@model CompanyItemViewModel;
@{
    ViewData["Title"] = "StockOut";
}
<p><center><h3 style="color : brown"> Stocks are Dispatching.</h3></center></p>
<p><center><h3 style="color : brown"> Please, Make sure to entry the dispatching.</h3></center></p>
<p>

</p>
<div class="container-fluid mb-5">
    <form  id="myForm"action="/StockOut/StockOut" method="post">
        <div class="container">
            <label asp-for="SelectedCompanyId" class="form-label mt-2"><b>Company</b></label>

            <select class="form-select mt-2" id="companyId" onchange="populateItems() "
                    asp-for="SelectedCompanyId">
                <option disabled selected>
                    Select Item....
                </option>
                @foreach (var item in Model.Companies)
                {        
                    <option asp-for="SelectedCompanyId"
                            onchange="populateItems()"
                            id="companyId" value="@item.Id">@item.Name</option>
                }
            </select>
            <label asp-for="SelectedItemId" class="form-label mt-2"><b>Item</b></label>

            <select class="form-select mt-2" id="itemId"  onchange="updateItemDetails()"
                    asp-for="SelectedItemId">
                <option selected>
                    Select Item....
                </option>

            </select>
            <label asp-for="SelectedItem.Quantity" class="form-label mt-2"><b>Quantity</b></label>
            <input readonly class="form-select mt-2" type="number" name="SelectedItemQuantity" id="SelectedItemQuantity" asp-for="SelectedItem.Quantity" placeholder="Quantity" />
            <label asp-for="SelectedItem.ReOrderLevel" class="form-label mt-2"><b>ReOrder Level</b></label>
            <input readonly class="form-select mt-2" type="number" name="SelectedItemReorderLevel" id="reorderLevel" asp-for="SelectedItem.ReOrderLevel" placeholder="Reorder Level" />
            <label for="stockOutQuantity" name="QuantityToChange" id="QuantityToChange" class="form-label mt-2"><b>Stock Out Quantity</b></label>
            <input type="number" class="form-select mt-2" name="QuantityToChange" id="stockOutQuantity" asp-for="StockNewQuantity" placeholder="Quantity to Minus" />
            <p>


            </p>
            <button type="button" onclick="CreateTable()" class="btn btn-primary" value="submit">ADD</button>
        </div>
    </form>

    <table id="mytable" class="table table-bordered caption-top">
        <caption class="caption-top">List of Items</caption>
        <thead class="table-dark ">
            <tr>
                <th scope="col">#</th>
                <th scope="col">Item</th>
                <th scope="col">Company</th>
                <th scope="col">Quantity</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <p>

    </p>
    @*<button type="button" onclick="SellItem(1)" class="btn btn-outline-primary" style="display:inline;">Sell</button>
    <button type="button" onclick="SellItem(2)" class="btn btn-outline-primary" style="display: inline;">Damage</button>
    <button type="button" onclick="SellItem(3)" class="btn btn-outline-primary" style="display: inline;">Lost</button>*@
    <button type="submit" onclick="SellItem(1)" name="selectedType" value="sell" class="btn btn-success">Sell</button>
    <button type="submit" onclick="SellItem(2)" name="selectedType" value="lost" class="btn btn-warning">Lost</button>
    <button type="submit" onclick="SellItem(3)" name="selectedType" value="damaged" class="btn btn-danger">Damaged</button>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<script>


    var itemName;
    var companyName;
    var quantity;
    var list = [];
    var i = 0;
    var temp=1;
    function CreateTable() {

        var quantityToChange = document.getElementById('stockOutQuantity').value;


        console.log(quantityToChange);
        var itemId = $("#itemId").val();
        var date = new Date();

        var row = { itemId, itemName, companyName, quantityToChange, date };

        list.push(row);

        
        let j = i;
        const table = document.querySelector('table tbody');

        const newRow = document.createElement('tr');
        const serial = document.createElement('td');
        const itemName1 = document.createElement('td');
        const company = document.createElement('td');
        const formQuantity = document.createElement('td');
        serial.textContent = temp;
        itemName1.textContent = itemName;
        company.textContent = companyName;
        formQuantity.textContent = quantityToChange;

        newRow.appendChild(serial);
        newRow.appendChild(itemName1);
        newRow.appendChild(company);
        newRow.appendChild(formQuantity);

        table.appendChild(newRow);

        i++;
        temp++;
    }
    function populateItems() {
        var companyId = $("#companyId").val();
        // Get the selected option element.
        var selectedOption = document.querySelector('#companyId option:checked');

        // Get the text of the selected option element.
        var selectedItemName = selectedOption.textContent;

        // Assign the text of the selected option element to a JavaScript variable.
        companyName = selectedItemName;

        $.ajax({
            url: "/Stock/GetItemsByCompanyId",
            data: { companyId: companyId },
            success: function (data) {
                $("#itemId").find('option:enabled').remove(); // Clear the options before appending new ones
                $("#itemId").append('<option value="">select item</option>');
                $(data).each(
                    function (key, value) {
                        $("#itemId").append('<option value="' + value.id + '">' + value.name + '</option>');
                    });
            }
        });
    }

    function SellItem(stockOutType) {

        const model = { items: list, stockOutType: stockOutType }
        var jsonString = JSON.stringify(model);


        $.ajax({
            url: "/Stock/SellItem",
            method: 'POST',
            dataType: 'Json',
            data: jsonString,
            contentType: 'application/json',
            success: function (data) {
                // Handle the response from the server.
                
                document.getElementById("myForm").reset();
                $("mytable").reload();
                alert("StockOutSuccessfully");
                location.reload();
                
            }
        });

    }


    function updateItemDetails() {
        var selectedItemId = $("#itemId").val();


        // Log the selected item ID to the console
        console.log("Selected item ID:", selectedItemId);

        $.ajax({
            url: "/Stock/UpdateItemDetails",
            data: { itemId: selectedItemId },
            success: function (data) {
                $('#quantity').empty();
                $('#reorderLevel').empty();

                var item = data;

                // Log the Item object to the console
                console.log("Item: ishan", item);

                $("#SelectedItemQuantity").val(item.quantity);
                console.log("item quantity:", item.quantity);
                console.log("item reordr:", item.reOrderLevel);
                itemName = item.name;
                $("#reorderLevel").val(item.reOrderLevel);



            }
        });
    }

         // Call the populateItems() function before the updateItemDetails() function

</script>